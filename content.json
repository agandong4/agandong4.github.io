{"meta":{"title":"agandong4's blog","subtitle":"记录生活，记录平凡，记录伟大","description":"个人博客","author":"agandong4","url":"http://yoursite.com"},"pages":[{"title":"guestbook","date":"2019-03-07T03:13:34.000Z","updated":"2019-03-07T03:13:34.892Z","comments":true,"path":"guestbook/index.html","permalink":"http://yoursite.com/guestbook/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"个人快捷键整理","slug":"个人快捷键整理","date":"2019-03-07T03:09:24.000Z","updated":"2019-03-07T03:10:22.567Z","comments":true,"path":"2019/03/07/个人快捷键整理/","link":"","permalink":"http://yoursite.com/2019/03/07/个人快捷键整理/","excerpt":"","text":"个人快捷键整理-在纠结和纠结当中，终于抛弃了windows 和linux，拥入mac的怀抱，windows不是不好用，有着庞大的软件群，但臃肿，靠着鼠标才能生存，并且搭建编程环境的时候，相当痛苦。而Linux 开源好，就美化来说，能折腾跟Mac一模一样的节目，然而并没有强大的软件生态。比如ps等等，比如常用的qq,wechat等等。挺喜欢linux的极客精神，但是，我们是用软件进行生产的，所以说，最终花了不少资金，将自己的小本本改成完美的黑苹果，Mac 上的生态群让人耳目一新，然而软件的快捷键也相当多。特地记下来做备忘录。 ⌘（command）、⌥（option）、⇧（shift）、⇪（caps lock）、⌃（control）、↩（return）mac 打开alfred 3 Command + space 退出 command + q 最小化 command + m 偏好设置 command + ; 打开表情符号 control + command + space 切换输入法 control + space 暂时从中文切换到英文 capslock alfred 3 alfred 3 神器使用指南 iterm光标控制 ctrl + a: 到行首 ctrl + e: 行末 ctrl + f/b: 前进后退，相当于左右方向键，但是显然比移开手按方向键更快 ctrl + p: 上一条命令，相当于方向键上 ctrl + r: 搜索命令历史，这个大家都应该很熟悉了 ctrl + d: 删除当前字符 ctrl + h: 删除之前的字符 ctrl + w: 删除光标前的单词 ctrl + k: 删除到文本末尾 ctrl + t: 交换光标处文本 ⌘ + —/+/0: 调整字体大小 ⌘ + r:清屏，其实是滚到新的一屏，并没有清空。ctrl + l 也可以做到。 窗口操作 新建窗口：shift + command + d（横向）command + d（竖向） 关闭窗口：shift + command + w 前一个窗口：command + ` 后一个窗口：command + ~ 进入窗口 1,2,3：option + command + 编号 标签页操作 新建标签页: Command + T 关闭标签页: Command + W 前一个标签页: Command + 左方向键，Shift + Command + [ 后一个标签页: Command + 右方向键，Shitf + Command + ] 进入标签页1，2，3…: Command + 标签页编号*Expose 标签页: Option + Command + E（将标签页打撒到全屏，并可以全局搜索所有的标签页） 面板操作 垂直分割: Command + D 水平分割: Shift + Command + D 前一个面板: Command + [ 后一个面板: Command + ] 切换到上/下/左/右面板: Option + Command + 上下左右方向键 其他功能 支持自定义全局快捷键用于显示和隐藏iTerm2 Preference -&gt; Keys －&gt; Show/hide iTerm2 with a system-wide hotkey 打上勾之后 进入和退出全屏: Command + Enter 查看当前终端中光标的位置: Command + / 命令自动补全: Command + ;（很少用这个，还是感觉Zsh的补全更好用） 开启和关闭背景半透明: Command + u 清屏（重置当前终端）: Command + r 位置书签 在当前会话中按Command + Shift + m可以保存当前位置，之后可以按Command + Shift + j跳回这个位置。 即时回放 使用Command + Opt + b 打开即时回放，按Esc退出。 链接：作者：是我始终拒绝成长吗 删除了部分快捷键,调整了顺序 tmux iterm 暂时够用，代写","raw":null,"content":null,"categories":[],"tags":[]},{"title":"个人小站开业了","slug":"个人小站开业了","date":"2019-03-03T18:50:29.000Z","updated":"2019-03-03T18:55:00.830Z","comments":true,"path":"2019/03/04/个人小站开业了/","link":"","permalink":"http://yoursite.com/2019/03/04/个人小站开业了/","excerpt":"","text":"个人小站于今天开业，中途被npm 坑了不少，不要用brew 安装nvm了，官网已经不支持了，各种报错，折腾了将近一周时间，权限问题，版本问题，全局安装问题等等 附上印象笔记markdown 语法 markdown 语法 === [TOC] ## 1、设置分级标题 #符号 ## 2、加粗文本 印象笔记 ## 3、斜体 印象笔记 ## 4、下划线 印象笔记 ## 5、删除线 印象笔记是世界上最烂的笔记 ## 6、添加分隔符 印象笔记支持 Markdown 了 ## 7、引用文本 >近日，印象笔记宣布完成重组。作为Evernote已在中国独立运营近6年的品牌，印象笔记将成为由中方控股的中美合资独立运营实体，并获得红杉宽带跨境数字产业基金首轮数亿元人民币投资。 >&gt;二级引用 ## 8、添加符号列表或者数字列表 语法示例 \\1. 数字加英文 . \\2. a,b,c之类的英文 \\3. 多级有序列表 在 - 按Tab - 1.0 000 - 2.0 aaa - 2.0.1 bbb - 2.0.1.1 ccc 印象笔记·剪贴板有什么特点？ * 快：开启自动模式，可以自动保存剪贴板的任意内容 * 一切：只要可以复制粘贴就可以保存 * 有序：全部保存在「我的剪贴板」笔记本并以时间来命名 ## 9、添加代办事项 1里面填写x 三只青蛙 * [x] 一只 * [ ] 两只 * [ ] 三只 ## 10、插入链接 google ## 11、插入图片 另外，针对插入的本地图片可以控制图片大小，在拖拽、拷贝或者点击插入本地图片之后，直接在图片名称后面（无需空格）添加以下语法均可以按照以下要求控制图片大小： * @w=300 * @h=150 * @w=200h=100 * @h=100w=200 ## 12、插入表格 | 帐户类型 | 免费帐户 | 标准帐户 | 高级帐户 | | — | — | — | — | | 帐户流量 | 60M | 1GB | 10GB | | 设备数目 | 2台 | 无限制 | 无限制 | | 当前价格 | 免费 | ￥8.17/月 | ￥12.33/月| ## 13、插入图表 目前支持饼状图、折线图、柱状图和条形图，只需将 type 改为对应的pie、line、column 和 bar。 `chart ,预算,收入,花费,债务 June,5000,8000,4000,6000 July,3000,1000,4000,3000 Aug,5000,7000,6000,3000 Sep,7000,2000,3000,1000 Oct,6000,5000,4000,2000 Nov,4000,3000,5000, type: column title: 每月收益 x.title: Amount y.title: Month y.suffix: $ ` ## 14、插入行内代码或代码块 `python #!/usr/bin/python import re line = “Cats are smarter than dogs” matchObj = re.match( r’(.) are (.?) .*’, line, re.M|re.I) if matchObj: ​ print “matchObj.group() : “, matchObj.group() ​ print “matchObj.group(1) : “, matchObj.group(1) ​ print “matchObj.group(2) : “, matchObj.group(2) else: ​ print “No match!!” ` ## 15、插入数学公式 印象笔记 Markdown 支持绝大多数的 LaTeX 数学公式 语法示例： `math e^{i\\pi} + 1 = 0 ` ### 更多数学公式的输入可以参考： 数学公式 ## 16、插入流程图 语法示例： `mermaid graph TD A[模块A] –&gt;|A1| B(模块B) B –&gt; C{判断条件C} C –&gt;|条件C1| D[模块D] C –&gt;|条件C2| E[模块E] C –&gt;|条件C3| F[模块F] C –&gt;|条件C4| G[模块G] ` ## 17、插入时序图 `mermaid sequenceDiagram A-&gt;&gt;B: 是否已收到消息？ B–&gt;&gt;A: 已收到消息 ` 18、插入甘特图 `mermaid gantt title 甘特图 dateFormat YYYY-MM-DD section 项目A 任务1 :a1, 2018-06-06, 30d 任务2 :after a1 , 20d section 项目B 任务3 :2018-06-12 , 12d 任务4 : 24d ` ## 19、设置目录 设置之后可以自动根据设置的分级标题来自动生成目录。 语法示例： [TOC] ## 20、快捷键 | 功能 | 快捷键 | | — | — | |新建 Markdown 笔记|Ctrl+Alt+D| |粗体|Ctrl+B| |斜体|Ctrl+I| |删除线|Ctrl+T| |下划线|Ctrl+U| |分隔线|Ctrl + Shift + -| |编号列表|Ctrl + Shift + O| |项目符号列表|Ctrl + Shift + B| |插入待办事项|Ctrl + Shift + C| |代码块|Ctrl+Shift+L| |插入日期和时间|Alt + Shift + D| |撤销|Ctrl+Z| |在笔记内搜索|Ctrl+F| |全局搜索|Ctrl+shift+e|","raw":null,"content":null,"categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-03-03T17:15:22.017Z","updated":"2019-03-03T17:15:22.017Z","comments":true,"path":"2019/03/04/hello-world/","link":"","permalink":"http://yoursite.com/2019/03/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null,"categories":[],"tags":[]}]}